import React from 'react';
import {
  List,
  Datagrid,
  TextField,
  EditButton,
  DeleteButton,
  ImageField,
  ReferenceInput,
  SelectInput,
  ReferenceArrayInput,
  SelectArrayInput,
  ImageInput,
} from 'react-admin';
import { Create, SimpleForm, TextInput, useGetList, Edit } from 'react-admin';
import { handleSaveWithImages } from '../JS/fileUploadUtils';
import uploadsConfig from '../../../../uploadsConfig';

// üìå –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
export const ServiceList = (props) => (
  <List {...props}>
    <Datagrid rowClick="edit">
      <TextField source="id" label="ID" />
      <TextField source="title" label="–ù–∞–∑–≤–∞–Ω–∏–µ" />
      <TextField source="description" label="–û–ø–∏—Å–∞–Ω–∏–µ" />
      <TextField source="form.title" label="–§–æ—Ä–º–∞" />

      {/* –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Ü–µ–Ω—Ç—Ä–æ–≤ */}
      <TextField
        source="centers"
        label="–¶–µ–Ω—Ç—Ä—ã"
        render={(record) =>
          record.centers?.map((c) => c.title).join(', ') || '-'
        }
      />

      {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
      <ImageField source="img[0]" label="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ" />

      <EditButton />
      <DeleteButton />
    </Datagrid>
  </List>
);

// üìå –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞
export const ServiceCreate = (props) => (
  <Create {...props} transform={handleSaveWithImages}>
    <SimpleForm>
      <TextInput source="title" label="–ù–∞–∑–≤–∞–Ω–∏–µ" />
      <TextInput source="description" label="–û–ø–∏—Å–∞–Ω–∏–µ" multiline />

      {/* –í—ã–±–æ—Ä –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ü–µ–Ω—Ç—Ä–æ–≤ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º `format` –∏ `parse` */}
      <ReferenceArrayInput
        source="centerIds"
        reference="centers"
        label="–¶–µ–Ω—Ç—Ä—ã"
        format={(value) => (Array.isArray(value) ? value.map((v) => v.id) : [])}
        parse={(value) => value.map((id) => ({ id }))}
      >
        <SelectArrayInput optionText="title" />
      </ReferenceArrayInput>

      {/* –í—ã–±–æ—Ä —Ñ–æ—Ä–º—ã */}
      <ReferenceInput
        source="formId"
        reference="forms"
        label="–§–æ—Ä–º–∞"
        allowEmpty
      >
        <SelectInput optionText="title" />
      </ReferenceInput>

      {/* –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
      <ImageInput
        source="img"
        label="–ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
        multiple
        accept="image/*"
        format={(value) =>
          Array.isArray(value) ? value.map((image) => ({ src: image })) : []
        }
        parse={(value) =>
          Array.isArray(value) ? value.map((file) => file.rawFile || file.src) : []
        }
      >
        <ImageField source="src" title="title" />
      </ImageInput>
    </SimpleForm>
  </Create>
);


// üìå –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞
export const ServiceEdit = (props) => (
  <Edit {...props} transform={handleSaveWithImages}>
    <SimpleForm>
      <TextInput source="title" label="–ù–∞–∑–≤–∞–Ω–∏–µ" />
      <TextInput source="description" label="–û–ø–∏—Å–∞–Ω–∏–µ" multiline />

      {/* –í—ã–±–æ—Ä –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ü–µ–Ω—Ç—Ä–æ–≤ */}
      <ReferenceArrayInput
        source="centerIds"
        reference="centers"
        label="–¶–µ–Ω—Ç—Ä—ã"
        format={(value) => (Array.isArray(value) ? value.map((v) => v.id) : [])}
        parse={(value) => value.map((id) => ({ id }))}
      >
        <SelectArrayInput optionText="title" />
      </ReferenceArrayInput>

      {/* –í—ã–±–æ—Ä —Ñ–æ—Ä–º—ã */}
      <ReferenceInput
        source="formId"
        reference="forms"
        label="–§–æ—Ä–º–∞"
        allowEmpty
      >
        <SelectInput optionText="title" />
      </ReferenceInput>

      {/* –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
      <ImageInput
        source="imagesRaw"
        label="–ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
        multiple
        accept="image/*"
      >
        <ImageField source="src" title="title" />
      </ImageInput>

      {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
      <ImageInput
        source="img"
        label="–°—Ç–∞—Ä—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
        multiple
        accept="image/*"
        format={(value) =>
          Array.isArray(value) ? value.map((image) => ({ src: image })) : []
        }
        parse={(value) =>
          Array.isArray(value) ? value.map((file) => file.rawFile || file.src) : []
        }
      >
        <ImageField source="src" title="title" />
      </ImageInput>
    </SimpleForm>
  </Edit>
);

