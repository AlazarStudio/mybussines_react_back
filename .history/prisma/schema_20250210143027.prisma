// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  email    String @unique
  login    String @unique
  name     String
  password String
}

model News {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  title       String
  description String
  date        DateTime
  img         String[]
}

model Form {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  title    String
  services Service[] // –°–≤—è–∑—å –æ–¥–∏–Ω –∫–æ –º–Ω–æ–≥–∏–º (1:M)
}

model Center {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  title    String
  services ServiceOnCenters[] // üîπ M:N —Å–≤—è–∑—å —á–µ—Ä–µ–∑ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
}

model Service {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  title       String
  description String
  img         String[]

  centers ServiceOnCenters[] // üîπ M:N —Å–≤—è–∑—å —á–µ—Ä–µ–∑ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
  form    Form?              @relation(fields: [formId], references: [id])
  formId  Int?
}

// üî• –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –¥–ª—è —Å–≤—è–∑–∏ M:N
model ServiceOnCenters {
  center   Center @relation(fields: [centerId], references: [id])
  centerId Int

  service   Service @relation(fields: [serviceId], references: [id])
  serviceId Int

  @@id([centerId, serviceId]) // –ö–æ–º–ø–æ–∑–∏—Ç–Ω—ã–π –ø–µ—Ä–≤–∏—á–Ω—ã–π –∫–ª—é—á
}

model Banner {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  img String[]
}

model Video {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  title String
  url   String
  date  DateTime
  img   String[]
}

model Map {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  title String
  ip    String
  ul    String
  smsp  String
}

model Support {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  title       String
  description String
  popular     Boolean
  img         String[]

  typeSupportId Int
  typeSupport   TypeSupport @relation(fields: [typeSupportId], references: [id]) // –°–≤—è–∑—å 1:M —Å TypeSupport

  tags TagsSupport[] @relation("SupportToTags") // –°–≤—è–∑—å M:N —Å TagsSupport
}

model TypeSupport {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  title    String
  supports Support[] // –û–¥–∏–Ω TypeSupport –º–æ–∂–µ—Ç –±—ã—Ç—å —É –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö Support
}

model TagsSupport {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  title    String
  supports Support[] @relation("SupportToTags") // –°–≤—è–∑—å M:N —Å Support
}

model base {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  title       String
  description String
  date        DateTime
  img         String[]
}

model showCase {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  title       String
  description String
  date        DateTime
  img         String[]
}

model Bid {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name  String
  phone String
  email String
  
}
